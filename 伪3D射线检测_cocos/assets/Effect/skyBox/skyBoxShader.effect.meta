{
  "ver": "1.0.25",
  "uuid": "fb45f795-6e6c-4c35-beb7-88cf688e51aa",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matView;\nuniform mat4 cc_matProj;\nuniform vec4 cc_time;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\n#if USE_TEXTURE\n  attribute vec2 a_uv0;\n  varying vec4 v_uv;\n  varying float mul;\n  uniform vec4 tilingOffset;\nuniform float multiplier;\nuniform float timeZoom;\n#endif\nvoid main () {\n  vec4 position = vec4(a_position,1.0);\n  highp mat4 matWorld = cc_matWorld;\n  #if USE_TEXTURE\n    v_uv.xy = a_uv0;\n    v_uv.zw = a_uv0;\n    #if FLIP_UV\n      v_uv.y = 1.0 - v_uv.y;\n      v_uv.w = 1.0 - v_uv.w;\n    #endif\n    float t = cc_time.x * timeZoom;\n    v_uv.xy += fract(tilingOffset.xy * t*2.0);\n    v_uv.zw += fract(tilingOffset.zw * t);\n    mul = multiplier;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  gl_Position = cc_matProj * cc_matView * matWorld * position;\n}",
        "frag": "\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\n#if USE_TEXTURE\n  varying vec4 v_uv;\n  varying float mul;\n  uniform sampler2D mainTexture;\n  uniform sampler2D detailTex;\n#endif\n#if USE_COLOR\n  uniform vec4 color;\n#endif\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\nvarying mediump vec2 v_uv0;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= texture2D(mainTexture, v_uv.xy) * texture2D(detailTex, v_uv.zw);\n  #endif\n  #if USE_COLOR\n    o *= color * mul;\n  #endif\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  gl_FragColor = CCFragOutput(o);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\n#if USE_TEXTURE\n  in vec2 a_uv0;\n  out vec4 v_uv;\n  out float mul;\n  uniform TexCoords {\n    vec4 tilingOffset;\n    float multiplier;\n    float timeZoom;\n  };\n#endif\nvoid main () {\n  vec4 position = vec4(a_position,1.0);\n  highp mat4 matWorld = cc_matWorld;\n  #if USE_TEXTURE\n    v_uv.xy = a_uv0;\n    v_uv.zw = a_uv0;\n    #if FLIP_UV\n      v_uv.y = 1.0 - v_uv.y;\n      v_uv.w = 1.0 - v_uv.w;\n    #endif\n    float t = cc_time.x * timeZoom;\n    v_uv.xy += fract(tilingOffset.xy * t*2.0);\n    v_uv.zw += fract(tilingOffset.zw * t);\n    mul = multiplier;\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  gl_Position = cc_matProj * cc_matView * matWorld * position;\n}",
        "frag": "\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\n#if USE_TEXTURE\n  in vec4 v_uv;\n  in float mul;\n  uniform sampler2D mainTexture;\n  uniform sampler2D detailTex;\n#endif\n#if USE_COLOR\n  uniform Constant {\n    vec4 color;\n  };\n#endif\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\nin mediump vec2 v_uv0;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= texture(mainTexture, v_uv.xy) * texture(detailTex, v_uv.zw);\n  #endif\n  #if USE_COLOR\n    o *= color * mul;\n  #endif\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  gl_FragColor = CCFragOutput(o);\n}"
      }
    }
  ],
  "subMetas": {}
}